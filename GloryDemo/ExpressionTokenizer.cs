//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GloryDemo {
    using GloryDemo;
    using System.Collections.Generic;
    
    internal class ExpressionTokenizer : TableTokenizer {
        internal static DfaEntry[] DfaTable = new DfaEntry[] {
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new int[] {
                                        9,
                                        13,
                                        32,
                                        32,
                                        133,
                                        133,
                                        160,
                                        160,
                                        5760,
                                        5760,
                                        8192,
                                        8202,
                                        8232,
                                        8233,
                                        8239,
                                        8239,
                                        8287,
                                        8287,
                                        12288,
                                        12288}, 1),
                            new DfaTransitionEntry(new int[] {
                                        40,
                                        40}, 2),
                            new DfaTransitionEntry(new int[] {
                                        41,
                                        41}, 3),
                            new DfaTransitionEntry(new int[] {
                                        42,
                                        42}, 4),
                            new DfaTransitionEntry(new int[] {
                                        43,
                                        43}, 5),
                            new DfaTransitionEntry(new int[] {
                                        45,
                                        45}, 6),
                            new DfaTransitionEntry(new int[] {
                                        47,
                                        47}, 7),
                            new DfaTransitionEntry(new int[] {
                                        48,
                                        57}, 8),
                            new DfaTransitionEntry(new int[] {
                                        65,
                                        90,
                                        95,
                                        95,
                                        97,
                                        122}, 9)}, -1),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new int[] {
                                        9,
                                        13,
                                        32,
                                        32,
                                        133,
                                        133,
                                        160,
                                        160,
                                        5760,
                                        5760,
                                        8192,
                                        8202,
                                        8232,
                                        8233,
                                        8239,
                                        8239,
                                        8287,
                                        8287,
                                        12288,
                                        12288}, 1)}, 14),
                new DfaEntry(new DfaTransitionEntry[0], 10),
                new DfaEntry(new DfaTransitionEntry[0], 11),
                new DfaEntry(new DfaTransitionEntry[0], 8),
                new DfaEntry(new DfaTransitionEntry[0], 6),
                new DfaEntry(new DfaTransitionEntry[0], 7),
                new DfaEntry(new DfaTransitionEntry[0], 9),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new int[] {
                                        48,
                                        57}, 8)}, 12),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new int[] {
                                        48,
                                        57,
                                        65,
                                        90,
                                        95,
                                        95,
                                        97,
                                        122}, 9)}, 13)};
        internal static int[] NodeFlags = new int[] {
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                1};
        internal static int[][] BlockEnds = new int[][] {
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null};
        public ExpressionTokenizer(IEnumerable<char> input) : 
                base(ExpressionTokenizer.DfaTable, ExpressionTokenizer.BlockEnds, ExpressionTokenizer.NodeFlags, input) {
        }
        public const int add = 6;
        public const int sub = 7;
        public const int mul = 8;
        public const int div = 9;
        public const int lparen = 10;
        public const int rparen = 11;
        public const int integer = 12;
        public const int identifier = 13;
        public const int whitespace = 14;
    }
}
